<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="koLibRI-config" xmlns:koLibRI="koLibRI-config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="koLibRI-config http://kopal.langzeitarchivierung.de/schema/koLibRI/config.xsd">

	<!-- Common Configuration Section: This common configuration part contains
		all common config values usable from all process starter, action modules
		and other classes. -->
	<common>
		<property>
			<field>logLevel</field>
			<value><%= scope.lookupvar('dhrep::services::publish::log_level') %></value>
		</property>
		<property>
			<field>defaultProcessStarter</field>
			<value>textgrid.publish.TGPublish</value>
			<value>textgrid.publish.TGPublishWorldReadable</value>
			<value>textgrid.publish.TGPublishSandboxData</value>
			<value>textgrid.copy.TGCopy</value>
		</property>
		<property>
			<field>policyFile</field>
			<value>/etc/dhrep/tgpublish/policies.xml</value>
		</property>
		<property>
			<field>defaultPolicyName</field>
			<value>TGPublish</value>
		</property>
		<property>
			<field>logfileDir</field>
			<value>/var/log/dhrep/tgpublish/</value>
		</property>
		<property>
			<field>tempDir</field>
			<value>/etc/dhrep/tgpublish/temp/</value>
		</property>
		<property>
			<field>destinationDir</field>
			<value>/etc/dhrep/tgpublish/dest/</value>
		</property>
		<property>
			<field>workDir</field>
			<value>/etc/dhrep/tgpublish/work/</value>
		</property>
		<property>
			<field>useDatabase</field>
			<value>false</value>
		</property>
		<property>
			<field>logMessagesWithStatus</field>
			<value>ERROR</value>
			<value>CANCELLED</value>
			<value>WARNING</value>
			<value>DONE</value>
		</property>
		<property>
			<field>defaultOwner</field>
			<value>TEST</value>
		</property>
		<property>
			<field>defaultServer</field>
			<value>localhost</value>
		</property>
		<property>
			<field>knownHostsFile</field>
			<value>***</value>
		</property>
		<property>
			<field>maxFiles</field>
			<value>5000</value>
		</property>
		<property>
			<field>dmdPrefix</field>
			<value>DMD</value>
		</property>
		<property>
			<field>amdPrefix</field>
			<value>AMDTECH</value>
		</property>
		<property>
			<field>techMdPrefix</field>
			<value>TECHMD</value>
		</property>
		<property>
			<field>mdWrapPrefix</field>
			<value>MDWRAP</value>
		</property>
		<property>
			<field>mdClassName</field>
			<value>de.langzeitarchivierung.kolibri.formats.Uof</value>
		</property>
		<property>
			<field>mdTemplateFile</field>
			<value>/etc/dhrep/tgpublish/mets_template.xml</value>
		</property>
		<property>
			<field>maxTechMDLength</field>
			<value>262144</value>
		</property>
		<property>
			<field>maxNumberOfThreads</field>
			<value>4</value>
			<description>Number of threads each process starter is able to work with.</description>
		</property>
		<property>
			<field>waitUntilNextTry</field>
			<value>15000</value>
		</property>
	</common>

	<!-- Module Configuration Section : This module configuration section contains
		all config data to use with single classes like action modules, process starter
		and other classes. The following information only is available in the given
		classes. -->
	<modules>

		<!-- Miscellaneous Classes -->
		<class name="formats.Uof">
			<property>
				<field>noWhiteSpacesInTechMd</field>
				<value>false</value>
			</property>
		</class>
		<class name="util.FormatRegistry">
			<property>
				<field>formatMapFileLocation</field>
				<value>/etc/dhrep/tgpublish/map_dias2jhove.xml</value>
			</property>
			<property>
				<field>formatRegistryBackupFile</field>
				<value>/etc/dhrep/tgpublish/dias_formatregistry.xml</value>
			</property>
			<property>
				<field>useBackupFileOnly</field>
				<value>true</value>
			</property>
		</class>

		<!-- ProcessStarters -->
		<class name="processstarter.PublishAbs">
			<property>
				<field>responseMapCapacity</field>
				<value>250</value>
				<description>The capacity of the response map.</description>
			</property>
			<property>
				<field>tgauthUrl</field>
				<value>http://localhost:8080/tgauth/tgextra.php</value>
			</property>
			<property>
				<field>tgauthCrudUrl</field>
				<value>http://localhost:8080/tgauth/tgextra-crud.php</value>
			</property>
			<property>
				<field>tgcrudUrl</field>
				<value>http://localhost:9093/tgcrud/TGCrudService?wsdl</value>
			</property>
		</class>
		<class name="processstarter.textgrid.publish.TGPublish">
			<property>
				<field>defaultPolicy</field>
				<value>TGPublish</value>
			</property>
			<property>
				<field>dataQueueCapacity</field>
				<value>20</value>
			</property>
			<property>
				<field>recheckDataQueue</field>
				<value>2000</value>
			</property>
		</class>
		<class name="processstarter.textgrid.publish.TGPublishWorldReadable">
			<property>
				<field>defaultPolicy</field>
				<value>TGPublishWorldReadable</value>
			</property>
			<property>
				<field>dataQueueCapacity</field>
				<value>20</value>
			</property>
			<property>
				<field>recheckDataQueue</field>
				<value>2000</value>
			</property>
			<property>
				<field>mimetypeRegExps</field>
				<value>text/xml\+xslt</value>
				<value>text/xsd\+xml</value>
				<value>text/tg\.service.+\+xml</value>
				<value>text/gwdl\.workflow\+xml</value>
				<value>text/tg\.workflow\+xml</value>
			</property>
		</class>
		<class name="processstarter.textgrid.publish.TGPublishSandboxData">
			<property>
				<field>defaultPolicy</field>
				<value>TGPublishSandboxData</value>
			</property>
			<property>
				<field>dataQueueCapacity</field>
				<value>100</value>
			</property>
			<property>
				<field>recheckDataQueue</field>
				<value>2000</value>
			</property>
		</class>
		<class name="processstarter.textgrid.copy.TGCopy">
			<property>
				<field>defaultPolicy</field>
				<value>TGCopy</value>
				<description>The policy of the TGCopy process starter.</description>
			</property>
			<property>
				<field>dataQueueCapacity</field>
				<value>20</value>
			</property>
			<property>
				<field>recheckDataQueue</field>
				<value>2000</value>
			</property>
		</class>

		<!-- ActionModules -->
		<class name="actionmodule.textgrid.publish.PublishCheckEdition">
			<property>
				<field>tgsearchUrl</field>
				<value>http://localhost:9090/tgsearch</value>
			</property>
			<property>
				<!-- Add required namespaces for evaluating xpath-expressions below separate
					prefix from url with = -->
				<field>xpathNamespaces</field>
				<value>tg=http://textgrid.info/namespaces/metadata/core/2010</value>
			</property>
			<property>
				<!-- Add xpath expressions for fields which are required for publishing
					an Edition here -->
				<field>editionRequiredFields</field>
				<value>/tg:object/tg:edition/tg:isEditionOf</value>
				<value>/tg:object/tg:edition/tg:license</value>
			</property>
			<property>
				<!-- Add xpath expressions for fields which are required for publishing
					an Item here -->
				<field>itemRequiredFields</field>
				<value>/tg:object/tg:item/tg:rightsHolder</value>
			</property>
			<property>
				<!-- Add xpath expressions for fields which are required for publishing
					a collection here -->
				<field>collectionRequiredFields</field>
				<value></value>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.PublishCheckWorldReadable">
			<property>
				<field>tgsearchUrl</field>
				<value>http://localhost:9090/tgsearch</value>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.CheckReferences">
			<property>
				<field>xmldbQueryPrefix</field>
				<value>***</value>
			</property>
			<property>
				<field>xmldbUser</field>
				<value>***</value>
			</property>
			<property>
				<field>xmldbPassword</field>
				<value>***</value>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.GetPids">
			<property>
				<field>tgpidUrl</field>
				<value>http://localhost:9094/tgpid/</value>
			</property>
			<property>
				<field>pidResolverPrefix</field>
				<value>https://textgridrep.org/</value>
			</property>
			<property>
				<field>amountOfPidsAtOnce</field>
				<value>25</value>
			</property>
			<property>
				<field>fakePids</field>
				<value><%= scope.lookupvar('dhrep::services::publish::fake_pids') %></value>
			</property>
			<property>
				<field>repeatTimes</field>
				<value>10</value>
			</property>
			<property>
				<field>repeatEvery</field>
				<value>10</value>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.ModifyAndUpdate">
			<property>
				<field>rewriteUrisToPids</field>
				<value>false</value>
				<description>DO NOT CHANGE THIS! TG-rep can't handle PIDs in aggregations yet!</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.CopyElasticSearchIndex">
			<property>
				<field>elasticSearchReadHost</field>
				<value>http://localhost:<%= scope.lookupvar('dhrep::params::elasticsearch_master_tcp_port') %>/textgrid-nonpublic/metadata/</value>
				<description>The endpoint URL of the ElasticSearch host to read metadtaa from (non-public instance).</description>
			</property>
			<property>
				<field>elasticSearchWriteHost</field>
				<value>http://localhost:<%= scope.lookupvar('dhrep::params::elasticsearch_master_tcp_port') %>/textgrid-public/metadata/</value>
				<description>The endpoint URL of the ElasticSearch host to write metadata to (public instance).</description>
			</property>
			<property>
				<field>elasticSearchClusterNameReadHost</field>
				<value><%= scope.lookupvar('dhrep::services::intern::elasticsearch::cluster_name') %></value>
				<description>The ElasticSearch cluster name</description>
			</property>
			<property>
				<field>elasticSearchClusterNameWriteHost</field>
				<value><%= scope.lookupvar('dhrep::services::intern::elasticsearch::cluster_name') %></value>
				<description>The ElasticSearch cluster name</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.MoveToStaticGridStorage">
			<property>
				<field>tgcrudSecret</field>
				<value><%= scope.lookupvar('dhrep::services::crud::publish_secret') %></value>
				<description>The secret used to authenticate to the TG-crud#MOVESTATIC method.</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.UpdateTgauth">
			<property>
				<field>nearlyPublish</field>
				<value>false</value>
				<description>Set to true if you want to NEARLY publish, set to false if you want to REALLY publish. See TextGrid Sandbox documentation for more information.</description>
			</property>
			<property>
				<field>tgauthSecret</field>
				<value><%= scope.lookupvar('dhrep::services::tgauth::crud_secret') %></value>
				<description>The secret the TG-auth needs for publishing. Only TG-crud is allowed to!</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.CopyRelationData">
			<property>
				<field>sesameReadHost</field>
				<value>http://localhost:9091/openrdf-sesame/repositories/textgrid-nonpublic</value>
				<description>The endpoint URL of the Sesame host to read metadata from (non-public instance).</description>
			</property>
			<property>
				<field>sesameReadUser</field>
				<value>***</value>
				<description>The username of the above used non-public Sesame database.</description>
			</property>
			<property>
				<field>sesameReadPassword</field>
				<value>***</value>
				<description>The password of the above used non-public Sesame database.</description>
			</property>
			<property>
				<field>sesameWriteHost</field>
				<value>http://localhost:9091/openrdf-sesame/repositories/textgrid-public</value>
				<description>The endpoint URL of the Sesame host to write metadata to (public instance).</description>
			</property>
			<property>
				<field>sesameWriteUser</field>
				<value>***</value>
				<description>The username of the above used public Sesame database.</description>
			</property>
			<property>
				<field>sesameWritePassword</field>
				<value>***</value>
				<description>The password of the above used public Sesame database.</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.publish.ReleaseNearlyPublishedRelation">
			<property>
				<field>sesameHost</field>
				<value>http://localhost:9091/openrdf-sesame/repositories/textgrid-public</value>
				<description>The endpoint URL of the Sesame host to write metadata to (public instance).</description>
			</property>
			<property>
				<field>sesameUser</field>
				<value>***</value>
				<description>The username of the above used public Sesame database.</description>
			</property>
			<property>
				<field>sesamePassword</field>
				<value>***</value>
				<description>The password of the above used public Sesame database.</description>
			</property>
			<property>
				<field>elasticSearchHost</field>
				<value>http://localhost:<%= scope.lookupvar('dhrep::params::elasticsearch_master_tcp_port') %>/textgrid-public/metadata/</value>
				<description>The endpoint URL of the ElasticSearch host to write metadata to (public instance).</description>
			</property>
			<property>
				<field>elasticSearchClusterName</field>
				<value><%= scope.lookupvar('dhrep::services::intern::elasticsearch::cluster_name') %></value>
				<description>The ElasticSearch cluster name</description>
			</property>
			<property>
				<field>removeFromRdfDatabase</field>
				<value>true</value>
				<description>If set to true, data is removed from RDF database.</description>
			</property>
			<property>
				<field>removeFromIdxDatabase</field>
				<value>true</value>
				<description>If set to true, data is removed from index database.</description>
			</property>
		</class>
		<class name="actionmodule.textgrid.copy.GatherObjectUris">
			<property>
				<field>tgsearchUrl</field>
				<value>http://localhost:9090/tgsearch/</value>
				<description>The endpoint URL of the TG-search service (non-public instance).</description>
			</property>
			<property>
				<field>tgsearchUrlPublic</field>
				<value>http://localhost:9090/tgsearch-public/</value>
				<description>The endpoint URL of the TG-search service (non-public instance).</description>
			</property>
		</class>
	</modules>
</config>
