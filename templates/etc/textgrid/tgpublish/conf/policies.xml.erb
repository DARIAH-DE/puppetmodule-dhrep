<?xml version="1.0" encoding="UTF-8"?>
<policies xmlns="koLibRI-policies" xmlns:koLibRI="koLibRI-policies"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="koLibRI-policies http://kopal.langzeitarchivierung.de/schema/koLibRI/policies.xsd">

	<!-- Policy for publishing objects from TG-lab -->
	<policy name="TGPublish">
		<step class="textgrid.publish.PublishStart">
			<step class="textgrid.publish.PublishCheckEdition">
				<!-- Locking and unlocking has to be tested yet -->
				<!--step class="textgrid.publish.LockObjects" -->
				<step class="textgrid.publish.CheckIsPublic">
					<!-- commented out due to non-existent XML database -->
					<!-- <step class="textgrid.publish.CheckReferences"> -->
					<step class="textgrid.publish.GetPids">
						<step class="textgrid.publish.ModifyAndUpdate">
							<step class="textgrid.publish.CopyElasticSearchIndex">
								<step class="textgrid.publish.CopyRelationData">
									<step class="textgrid.publish.MoveToStaticGridStorage">
										<step class="textgrid.publish.UpdateTgauth">
											<config>
												<property>
													<field>nearlyPublish</field>
													<value>FALSE</value>
												</property>
											</config>
											<!-- Locking and unlocking has to be tested yet -->
											<!--step class="textgrid.publish.UnlockObjects" -->
											<step class="textgrid.publish.PublishComplete" />
											<!--/step -->
										</step>
									</step>
								</step>
							</step>
						</step>
					</step>
					<!-- </step> -->
				</step>
				<!--/step -->
			</step>
		</step>
	</policy>

	<!-- TODO: Policy for publishing objects from TG-lab into the Sandbox -->
	<!-- <policy name="TGPublish"> -->
	<!-- <step class="textgrid.publish.PublishStart"> -->
	<!-- <step class="textgrid.publish.PublishCheckEdition"> -->
	<!-- <step class="textgrid.publish.LockObjects"> -->
	<!-- <step class="textgrid.publish.CheckIsPublic"> -->
	<!-- <step class="textgrid.publish.CheckReferences"> -->
	<!-- <step class="textgrid.publish.GetPids"> -->
	<!-- <step class="textgrid.publish.ModifyAndUpdate"> -->
	<!-- <step class="textgrid.publish.CopyElasticSearchIndex"> -->
	<!-- <step class="textgrid.publish.CopyRelationData"> -->
	<!-- <step class="textgrid.publish.CopyToStaticGridStorage"> -->
	<!-- <step class="textgrid.publish.UpdateTgauth"> -->
	<!-- <config> -->
	<!-- <property> -->
	<!-- <field>nearlyPublish</field> -->
	<!-- <value>TRUE</value> -->
	<!-- </property> -->
	<!-- </config> -->
	<!-- <step class="textgrid.publish.UnlockObjects"> -->
	<!-- <step class="textgrid.publish.PublishComplete" /> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </step> -->
	<!-- </policy> -->

	<!-- Policy for publishing technical TextGrid objects in WorldReadable state 
		(also from TG-lab) -->
	<policy name="TGPublishWorldReadable">
		<step class="textgrid.publish.PublishStart">
			<step class="textgrid.publish.PublishCheckWorldReadable">
				<step class="textgrid.publish.ModifyAndUpdate">
					<step class="textgrid.publish.CopyElasticSearchIndex">
						<step class="textgrid.publish.CopyRelationData">
							<step class="textgrid.publish.MoveToStaticGridStorage">
								<step class="textgrid.publish.UpdateTgauth">
									<step class="textgrid.publish.PublishComplete" />
								</step>
							</step>
						</step>
					</step>
				</step>
			</step>
		</step>
	</policy>

	<!-- Policy for validating sandbox data and publish afterwards (called directly 
		from the koLibRI TextGrid import module) -->
	<!-- TODO Could be extended for validating sandbox data before finally publishing. 
		Needs a new ProcessStarter and two new ActionModules, at least RemoveNearlyPublish, 
		and maybe (depending on the response handling) that returns the PublishResponse 
		to the client. Has to work on Edition level in the near future! -->
	<!-- NOTE For the time beeing we just update the TG-auth isPublic flag by 
		calling TG-auth#PUBLISH and delete the isNearyPublished relation from the 
		RDF database. Works only on TextGrid object level right now! -->
	<policy name="TGPublishSandboxData">
		<step class="textgrid.publish.PublishStart">
			<!-- <step class="textgrid.publish.PublishCheckEdition"> -->
			<!-- <step class="textgrid.publish.CheckIsPublic"> -->
			<!-- <step class="textgrid.publish.CheckReferences"> -->
			<step class="textgrid.publish.ReleaseNearlyPublishedRelation">
				<step class="textgrid.publish.UpdateTgauth">
					<step class="textgrid.publish.PublishComplete" />
				</step>
			</step>
			<!-- </step> -->
			<!-- </step> -->
			<!-- </step> -->
		</step>
	</policy>

	<!-- Policy for the TG-copy tool. -->
	<policy name="TGCopy">
		<step class="textgrid.copy.CopyStart">
			<step class="textgrid.copy.GatherObjectUris">
				<step class="textgrid.copy.ModifyAndCreate">
					<step class="textgrid.copy.CopyComplete" />
				</step>
			</step>
		</step>
	</policy>

	<!-- Simple policy for testing things -->
	<policy name="Test">
		<step class="textgrid.publish.PublishStart">
			<step class="textgrid.publish.PublishComplete" />
		</step>
	</policy>
</policies>
