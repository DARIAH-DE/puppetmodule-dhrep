

NAME
	ldapcleaner - Updates LDAP server data

SYNOPSIS
	ldapcleaner -a addstring [ -A attributefile ] [ -B basedn ]
	[ -b casesensitivecomparisonattributes ] [ -C cleanerstring ]
	[ -c configfile ] [ -e createdeletedentry ] [ -N createnewentry ] [ -V csvoutputfile ] [ -d ] -D deletefilter
	[ -X dynamiccleanerinvocation ] -f findstring [ -F functionlib ] [ -H helpfeature ] [ -I inform ] -i inputfile [ -G language ] -u ldapuri [ -L logfile ] [ -l loglevel ] [ -m match ] [ -n maxentries ] [ -M modifier ] [ -o ] [ -p passwordfile ] [ -P pidfile ]
	[ -z postfilterfunction ] [ -h ] [ -R ] -r replacestring -s searchattribute [ -S searchfilter ] [ -T ] [ -t transfertonewparent ] [ -v ]

DESCRIPTION
	entries

	ldapcleaner is a software to search and replace ldapdata or to delete

OPTIONS
	-a addstring
		specifies the attributes to add/replace/delete.Format is
		<attributename>=<attributevalue> for adding values or
		<attributename>==<attributevalue> for replacing values or
		<attributename>=- for deleting an attribute. Objectclass
		is treated as normal attribute here. More than one such
		specification can be specified separated with a semicolon.

		This option or option deletefilter (-D) or option 
		cleanerstring (-C) or option  createnewentry (-N) or
		option	transfertonewparent (-t) or option 
		searchattribute (-s) or option	searchfilter (-S) or
		option	csvoutputfile (-V) MUST be set!

		No default

	-A attributefile
		Name of the user config attributes file which contains a
		list of attributenames (one in each line) that are to be
		used in the "ALL"-mode of parameter searchattribute (see
		-s).

		The file has to exist.
		No default

	-b casesensitivecomparisonattributes
		Semicolon separated list of attribute names which should
		be compared case sensitive with respect to new and
		to-be-replaced values

		No default

	-B basedn
		Use this BaseDN instead of the BaseDN in ldapuri (-u) for
		any search

		No default

	-C cleanerstring
		specifies a regexp that defines a string to be deleted in
		an attribute. If this action leads to two identical
		values, one value will be deleted. If the cleanerstring
		starts with a + the value without that string will be
		deleted.

		The following condition(s) have to be fulfilled: 
		1.) option findstring must not be set  
		2.) option searchattribute must be set

		No default

	-c configfile
		Name of the user config file with absolute or relative
		path. Default: etc/ldapcleaner.conf.

		The file has to exist.
		Default is: "etc/ldapcleaner.conf"


	-D deletefilter
		Specifies an LDAP-Filter for entries to be deleted please
		handle with care and use testmode (-T) first. Instead of a
		proper LDAP-Filter you can for timestamps also use the
		format: (Attribute OLDER_THAN \<timestatement\>) where
		\<timestatement\> is a number followed by s m h D M or Y
		for seconds, minutes, hours, days, months or years: Beware
		the algorithm for creating an ldap generalizedTime value
		is based on seconds and thus takes into account leap years
		and counts every month to have 30 days.

		This option or option findstring (-f) or option 
		cleanerstring (-C) or option  addstring (-a) or option 
		searchfilter (-S) or option  dynamiccleanerinvocation (-X)
		or option  csvoutputfile (-V) MUST be set!

		No default

	-d [debugmode]
		sets debug mode to on; this feature is unused, and should
		be enabled in the log4perl config file

		No default

	-e createdeletedentry
		Specifies that a torso-entry shall replace the deleted
		entry. Format:	 <Objectclasses>;<Attributes>;<new
		Atttributes>;<RDN-Attribut>;<Base-DN>, the first three
		parts being comma separated lists, where the <new
		Attributes> consist of entries like XX=YY, by which a new
		attribute XX gets the value of YY as its value.

		The following condition has to be fulfilled: 
		option deletefilter must be set

		No default

	-f findstring
		specifies the search string

		This option or option deletefilter (-D) or option 
		cleanerstring (-C) or option  addstring (-a) or option 
		searchfilter (-S) or option  dynamiccleanerinvocation (-X)
		or option  csvoutputfile (-V) MUST be set!

		No default

	-F functionlib
		Name of the module containing customerfunctions.

		No default

	-G language
		Sets the language for output like this one

		Possible values are: en, de

		Default is: "en"


	-H helpfeature
		prints out description of the feature referenced by
		commandline flag or config file token

		No default

	-h [printhelp]
		prints out the manpage

		No default

	-i inputfile
		Name of the LDIF input file.

		The file has to exist.
		The following condition has to be fulfilled: 
		option ldapuri must not be set

		This option or option ldapuri (-u) MUST be set!

		No default

	-I inform
		specifies the format of the input. Possible values are
		listed below with following syntax:
		[<headerinfo>]_<format> where: <headerinfo> is not yet
		fully supported, <format> can be either LDAP or LDIF;

		Possible values are: _LDIF, H_LDIF, _LDAP

		Default is: "_LDAP"


	-L logfile
		Name of the logfile with absolute or relative path.
		Default: ./log/ldapcleaner.log

		The syntax will be checked.
		Default is: "ldapcleaner.log"


	-l loglevel
		Loglevel for controlling logmessages.

		Possible values are: no, all, debug, info, warn, error,
		fatal

		Default is: "error"


	-m match
		specifies for which matchingrule the filter should be
		created: eq for equality and sub for substring

		Possible values are: eq, sub

		Default is: "sub"


	-M modifier
		specifies modifier (i and/or g)für regularexpressions

		Default is: " "


	-N createnewentry
		Spezifiziert einen neuen Rumpfeintrag unterhalb der von
		searchfilter gefundenen Basen, so zu spezifizieren:
		<Objektklassen>;<RDN-Attribut>;<neue Atttribute>,
		Objektklassen und neue Attr. sind Komma-separierte Listen,
		wobei bei <neue Attribute> die Listeneinträge im Format
		XX=YY bzw. XX:=ZZ haben, wodurch das neue Attribut XX den
		Wert YY bzw. base64_decode(ZZ) zugewiesen bekommt.

		The following condition has to be fulfilled: 
		option searchfilter must be set

		No default

	-n maxentries
		specifies how many entries shall be processed. Default: 0
		= all entries will be processed

		The syntax will be checked.
		No default

	-o [needoperational]
		Provides operational attributes (entryCSN,
		createTimestamp, modifiersName, etc.) from LDAP entries

		No default

	-p passwordfile
		Name of the password file which contains the secrets the
		programm must know to connect to data bases etc. The
		format for all lines of this file must be:
		<token><blank><password> where <token> has to be the
		option label which defines the database such as e.g.
		"ldapuri". 

		The file has to exist.
		Default is: "ldapcleaner.secret"


	-P pidfile
		Name of the file where current process id is stored. If
		you specify the value "NONE" no pidfile will be created
		and no pidfile will be searched for. BEWARE: this means
		that two instances of ldapcleaner are allowed to run in
		parallel.

		The syntax will be checked.
		Default is: "/tmp/ldapcleaner.pid"


	-R [regexp]
		specifies whether find and replace strings are to be
		interpreted as a regularexpression

		No default

	-r replacestring
		specifies the replacement for the search string

		This option or option deletefilter (-D) or option 
		cleanerstring (-C) or option  addstring (-a) or option 
		createnewentry (-N) or option  transfertonewparent (-t) or
		option	dynamiccleanerinvocation (-X) or option 
		csvoutputfile (-V) MUST be set!

		No default

	-S searchfilter
		Specifies an LDAP-Filter for entries to be modified.

		No default

	-s searchattribute
		Name of the attribute for replacing or for the delete
		condition. If you specify "ALL" or "*", all attributes
		will used, which only makes sense in the replace mode. All
		attributes means all attributes specified in the
		Attributefile (see -A).

		This option or option deletefilter (-D) or option 
		addstring (-a) or option  createnewentry (-N) or option 
		searchfilter (-S) or option  dynamiccleanerinvocation (-X)
		or option  csvoutputfile (-V) MUST be set!

		No default

	-T [testmode]
		Sets test mone on, thus no changes in LDAP server will be
		made.

		No default

	-t transfertonewparent
		New Parent DN for the entry/-ies found by -S, will be
		moved there

		No default

	-u ldapuri
		URI for LDAP server. 
		The format for the LDAP URI is (see RFC 4516):
		ldap://<host>[:<port>]/<basedn>?<attributes>?<scope>?
		<filter>?<extension> where <extension> can by now only be
		either bindname=<bindname> for authenticating to the
		server. In this case the corresponding password has to be
		stored in the passwordfile (-p, default is
		ldapcleaner.secret) behind the token ldapuri.

		The syntax will be checked.
		The following condition(s) have to be fulfilled: 
		1.) option inputfile must not be set  
		2.) option inform has to contain the value "_LDAP"

		This option or option inputfile (-i) MUST be set!

		No default

	-v [verbose]
		Sets verbose mode which makes the program quite chatty.

		No default

	-V csvoutputfile
		Name of the CSV output file. You NEED to set a config file
		option 'csvfields' with syntax: ;-separated list of
		attributes for output into the CSV file specified by
		command line option -V / config option 'csvoutputfile'.
		Each attribute can have an optional heading prepended with
		colon. The special attributes entrydn, parentdn,
		grandparentdn, grandgrandparentdn, grandgrandgrandparentdn
		exist. The entries are specified by option
		searchfilter.Example:
		'Loginname:uid;Lastname:sn;Path:grandparentdn'

		No default

	-X dynamiccleanerinvocation
		eXecute 1..n ldapcleaner skripts (i.e. configfiles) to be
		called from this ldapcleaner instance. Example option
		syntax: 
		"-B /path/config1.conf;-B /path/config2.conf" 
		currently only -B is implemented (i.e. the entries found
		by the master script will be used as basedns for the
		children scripts). The option -T (testmode) will be
		inherited from the parent script. So specifying 'basedn'
		or 'testmode' in the child configs is useless. Be sure to
		specify a different PID file in the parent and in the
		children.

		No default

	-z postfilterfunction
		Function from functionlib (see -F) that runs after entries
		have been fetched by the normal filtering process. Is
		being called for each entry, and must return 1 if the
		entry is to be kept in the result set, or 0 if not.

		No default

EXAMPLE
	For getting this manpage: 
 	   ldapcleaner.pl -h

SEE ALSO
AUTHOR
	Peter Gietz, Martin Haase, DAASI International GmbH, info@daasi.de

VERSION
	1.3.0, 2015-05-28

COPYRIGHT
	Copyright (c) 2009-2015 DAASI International GmbH

	This library is free software; you can redistribute it and/or modify it
	under the same terms as Perl itself.

BUGS
	Please report bugs to peter.gietz@daasi.de

